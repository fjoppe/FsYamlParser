<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk">
  <Import Project="..\..\packages\test\NUnit\build\NUnit.props" Condition="Exists('..\..\packages\test\NUnit\build\NUnit.props')" Label="Paket" />
  <PropertyGroup>
    <Name>Legivel.Tests</Name>
    <AssemblyName>Legivel.Tests</AssemblyName>
    <RootNamespace>YamlParser.Tests</RootNamespace>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>ed4cd570-a206-4922-88aa-991a2e8c2642</ProjectGuid>
    <OutputType>Library</OutputType>
    <!-- <TargetFrameworkVersion>v4.5</TargetFrameworkVersion> -->
    <TargetFrameworks>net45;netcoreapp2.0</TargetFrameworks>
    <!-- <TargetFSharpCoreVersion>4.3.0.0</TargetFSharpCoreVersion> -->
    <TargetFrameworkProfile />
    <EnableDefaultCompileItems>false</EnableDefaultCompileItems>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>Full</DebugType>
    <Optimize>false</Optimize>
    <Tailcalls>false</Tailcalls>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <WarningLevel>3</WarningLevel>
    <TreatWarningsAsErrors>false</TreatWarningsAsErrors>
    <WarningsAsErrors />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>PdbOnly</DebugType>
    <Optimize>true</Optimize>
    <Tailcalls>true</Tailcalls>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <WarningLevel>3</WarningLevel>
  </PropertyGroup>
  <!-- <ItemGroup>
    <Reference Include="mscorlib" />
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Data" />
    <Reference Include="System.Data.Linq" />
    <Reference Include="System.Numerics" />
  </ItemGroup> -->
  <ItemGroup Condition="'$(TargetFramework)' == 'net45'">
    <Reference Include="FSharp.Charting">
      <HintPath>..\..\packages\FSharp.Charting\lib\net45\FSharp.Charting.dll</HintPath>
      <Private>True</Private>
      <Paket>True</Paket>
    </Reference>
    <Reference Include="FSharp.Core">
      <HintPath>..\..\packages\FSharp.Core\lib\net45\FSharp.Core.dll</HintPath>
      <Private>True</Private>
      <Paket>True</Paket>
    </Reference>    
    <Reference Include="FSharp.Data">
      <HintPath>..\..\packages\test\FSharp.Data\lib\net45\FSharp.Data.dll</HintPath>
      <Private>True</Private>
      <Paket>True</Paket>
    </Reference>
    <Reference Include="NLog">
      <HintPath>..\..\packages\test\NLog\lib\net45\NLog.dll</HintPath>
      <Private>True</Private>
      <Paket>True</Paket>
    </Reference>    
    <Reference Include="NLog.FSharp">
      <HintPath>..\..\packages\test\NLog.FSharp\lib\net40\NLog.FSharp.dll</HintPath>
      <Private>True</Private>
      <Paket>True</Paket>
    </Reference>    
    <Reference Include="nunit.framework">
      <HintPath>..\..\packages\test\NUnit\lib\net45\nunit.framework.dll</HintPath>
      <Private>True</Private>
      <Paket>True</Paket>
    </Reference>    
  </ItemGroup>
  <ItemGroup Condition="'$(TargetFramework)' == 'netcoreapp2.0'">
    <!-- <Reference Include="FSharp.Charting">
      <HintPath>..\..\packages\FSharp.Charting\lib\net45\FSharp.Charting.dll</HintPath>
      <Private>True</Private>
      <Paket>True</Paket>
    </Reference> -->
    <Reference Include="FSharp.Core">
      <HintPath>..\..\packages\test\FSharp.Core\lib\netstandard1.6\FSharp.Core.dll</HintPath>
      <Private>True</Private>
      <Paket>True</Paket>
    </Reference>    
    <Reference Include="FSharp.Data">
      <HintPath>..\..\packages\test\FSharp.Data\lib\netstandard2.0\FSharp.Data.dll</HintPath>
      <Private>True</Private>
      <Paket>True</Paket>
    </Reference>
    <Reference Include="NLog">
      <HintPath>..\..\packages\test\NLog\lib\netstandard2.0\NLog.dll</HintPath>
      <Private>True</Private>
      <Paket>True</Paket>
    </Reference>    
    <Reference Include="NLog.FSharp">
      <HintPath>..\..\packages\test\NLog.FSharp\lib\net40\NLog.FSharp.dll</HintPath>
      <Private>True</Private>
      <Paket>True</Paket>
    </Reference>    
    <Reference Include="nunit.framework">
      <HintPath>..\..\packages\test\NUnit\lib\netstandard2.0\nunit.framework.dll</HintPath>
      <Private>True</Private>
      <Paket>True</Paket>
    </Reference>
    <PackageReference Include="Microsoft.NET.Test.Sdk" />
    <PackageReference Include="NUnit3TestAdapter" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="..\..\paket-files\test\fsprojects\FsUnit\src\FsUnit.NUnit\FsUnitTyped.fs">
      <Paket>True</Paket>
      <Link>paket-files/FsUnitTyped.fs</Link>
    </Compile>
    <Compile Include="AssemblyInfo.fs" />
    <None Include="paket.references" />
    <Content Include="App.config" />
    <Compile Include="..\Legivel.Tests\TestUtils.fs">
      <Link>TestUtils.fs</Link>
    </Compile>
    <Compile Include="..\Legivel.Tests\Chapter2Tests.fs">
      <Link>Chapter2Tests.fs</Link>
    </Compile>
    <Compile Include="..\Legivel.Tests\Chapter5Tests.fs">
      <Link>Chapter5Tests.fs</Link>
    </Compile>
    <Compile Include="..\Legivel.Tests\Chapter6Tests.fs">
      <Link>Chapter6Tests.fs</Link>
    </Compile>
    <Compile Include="..\Legivel.Tests\Chapter7Tests.fs">
      <Link>Chapter7Tests.fs</Link>
    </Compile>
    <Compile Include="..\Legivel.Tests\Chapter8Tests.fs">
      <Link>Chapter8Tests.fs</Link>
    </Compile>
    <Compile Include="..\Test.Legivel.Common\Test.Legivel.Common.fs">
      <Link>Test.Legivel.Common.fs</Link>
    </Compile>
    <Compile Include="..\Test.Legivel.RegexDSL\Test.Legivel.RegexDSL.fs">
      <Link>Test.Legivel.RegexDSL.fs</Link>
    </Compile>
    <Compile Include="..\Test.Legivel.SpookyHash\Test.Legivel.SpookyHash.fs">
      <Link>Test.Legivel.SpookyHash.fs</Link>
    </Compile>
    <Compile Include="Yaml.Mapper.Tests.fs" />
    <Compile Include="..\Legivel.Tests\APIs.guru.Tests.fs">
      <Link>APIs.guru.Tests.fs</Link>
    </Compile>
    <Compile Include="..\Test.Legivel.Tokenizer\TestTokenizer.fs">
      <Link>TestTokenizer.fs</Link>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\..\src\Legivel.Mapper.Merged\Legivel.Mapper.fsproj">
      <Name>Legivel.Mapper</Name>
      <Project>{f1048c7d-0ad1-41e2-86ef-d8aa4bae982d}</Project>
      <Private>True</Private>
    </ProjectReference>
    <ProjectReference Include="..\..\src\Legivel.Parser.Merged\Legivel.Parser.fsproj">
      <Name>Legivel.Parser</Name>
      <Project>{b0b8f1c7-cb0d-495f-9b09-e8d68561aee7}</Project>
      <Private>True</Private>
    </ProjectReference>
    <ProjectReference Include="..\..\src\Legivel.YamlPath.Merged\Legivel.YamlPath.fsproj">
      <Name>Legivel.YamlPath</Name>
      <Project>{e8e3c303-65c3-40f1-8e7f-5b43868a9e6f}</Project>
      <Private>True</Private>
    </ProjectReference>
  </ItemGroup>
  <!-- <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" /> -->
  <!-- <Choose>
    <When Condition="'$(VisualStudioVersion)' == '11.0'">
      <PropertyGroup Condition="Exists('$(MSBuildExtensionsPath32)\..\Microsoft SDKs\F#\3.0\Framework\v4.0\Microsoft.FSharp.Targets')">
        <FSharpTargetsPath>$(MSBuildExtensionsPath32)\..\Microsoft SDKs\F#\3.0\Framework\v4.0\Microsoft.FSharp.Targets</FSharpTargetsPath>
      </PropertyGroup>
    </When>
    <Otherwise>
      <PropertyGroup Condition="Exists('$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)\FSharp\Microsoft.FSharp.Targets')">
        <FSharpTargetsPath>$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)\FSharp\Microsoft.FSharp.Targets</FSharpTargetsPath>
      </PropertyGroup>
    </Otherwise>
  </Choose> -->
  <!-- <Import Project="$(FSharpTargetsPath)" /> -->
  <!-- <Import Project="$(SolutionDir)\.nuget\NuGet.targets" Condition="Exists('$(SolutionDir)\.nuget\NuGet.targets')" /> -->
  <!-- <Choose>
    <When Condition="$(TargetFrameworkIdentifier) == '.NETFramework' And $(TargetFrameworkVersion) == 'v4.5'">
      <ItemGroup>
        <Reference Include="FSharp.Charting">
          <HintPath>..\..\packages\FSharp.Charting\lib\net45\FSharp.Charting.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
  </Choose> -->
 <!-- <Choose>
    <When Condition="$(TargetFrameworkIdentifier) == '.NETFramework' And ($(TargetFrameworkVersion) == 'v4.5' Or $(TargetFrameworkVersion) == 'v4.5.1' Or $(TargetFrameworkVersion) == 'v4.5.2' Or $(TargetFrameworkVersion) == 'v4.5.3' Or $(TargetFrameworkVersion) == 'v4.6' Or $(TargetFrameworkVersion) == 'v4.6.1' Or $(TargetFrameworkVersion) == 'v4.6.2' Or $(TargetFrameworkVersion) == 'v4.6.3' Or $(TargetFrameworkVersion) == 'v4.7' Or $(TargetFrameworkVersion) == 'v4.7.1' Or $(TargetFrameworkVersion) == 'v4.7.2')">
      <ItemGroup>
        <Reference Include="FSharp.Core">
          <HintPath>..\..\packages\FSharp.Core\lib\net45\FSharp.Core.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
    <When Condition="($(TargetFrameworkIdentifier) == 'MonoAndroid' And ($(TargetFrameworkVersion) == 'v7.0' Or $(TargetFrameworkVersion) == 'v7.1' Or $(TargetFrameworkVersion) == 'v8.0' Or $(TargetFrameworkVersion) == 'v8.1' Or $(TargetFrameworkVersion) == 'v9.0')) Or ($(TargetFrameworkIdentifier) == 'MonoTouch') Or ($(TargetFrameworkIdentifier) == '.NETCoreApp' And ($(TargetFrameworkVersion) == 'v1.0' Or $(TargetFrameworkVersion) == 'v1.1' Or $(TargetFrameworkVersion) == 'v2.0' Or $(TargetFrameworkVersion) == 'v2.1' Or $(TargetFrameworkVersion) == 'v2.2' Or $(TargetFrameworkVersion) == 'v3.0')) Or ($(TargetFrameworkIdentifier) == '.NETStandard' And ($(TargetFrameworkVersion) == 'v1.6' Or $(TargetFrameworkVersion) == 'v2.0')) Or ($(TargetFrameworkIdentifier) == '.NETCore' And $(TargetFrameworkVersion) == 'v5.0') Or ($(TargetFrameworkIdentifier) == 'Xamarin.iOS') Or ($(TargetFrameworkIdentifier) == 'Xamarin.Mac') Or ($(TargetFrameworkIdentifier) == 'Xamarin.tvOS') Or ($(TargetFrameworkIdentifier) == 'Xamarin.watchOS')">
      <ItemGroup>
        <Reference Include="FSharp.Core">
          <HintPath>..\..\packages\FSharp.Core\lib\netstandard1.6\FSharp.Core.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>   -->
  <!-- <Choose>
    <When Condition="$(TargetFrameworkIdentifier) == '.NETFramework' And $(TargetFrameworkVersion) == 'v4.5'">
      <ItemGroup>
        <Reference Include="FSharp.Data">
          <HintPath>..\..\packages\FSharp.Data\lib\net45\FSharp.Data.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
  </Choose> -->
  <!-- <Choose>
    <When Condition="$(TargetFrameworkIdentifier) == '.NETFramework' And $(TargetFrameworkVersion) == 'v4.5'">
      <ItemGroup>
        <Reference Include="NLog">
          <HintPath>..\..\packages\test\NLog\lib\net45\NLog.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
  </Choose> -->
  <!-- <Choose>
    <When Condition="$(TargetFrameworkIdentifier) == '.NETFramework' And $(TargetFrameworkVersion) == 'v4.5'">
      <ItemGroup>
        <Reference Include="NLog.FSharp">
          <HintPath>..\..\packages\test\NLog.FSharp\lib\net40\NLog.FSharp.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
  </Choose> -->
  <!-- <Choose>
    <When Condition="$(TargetFrameworkIdentifier) == '.NETFramework' And $(TargetFrameworkVersion) == 'v4.5'">
      <ItemGroup>
        <Reference Include="nunit.framework">
          <HintPath>..\..\packages\test\NUnit\lib\net45\nunit.framework.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
    <When Condition="($(TargetFrameworkIdentifier) == '.NETCoreApp' And ($(TargetFrameworkVersion) == 'v1.0' Or $(TargetFrameworkVersion) == 'v1.1' Or $(TargetFrameworkVersion) == 'v2.0' Or $(TargetFrameworkVersion) == 'v2.1' Or $(TargetFrameworkVersion) == 'v2.2' Or $(TargetFrameworkVersion) == 'v3.0')) Or ($(TargetFrameworkIdentifier) == '.NETStandard' And ($(TargetFrameworkVersion) == 'v1.6' Or $(TargetFrameworkVersion) == 'v2.0'))">
      <ItemGroup>
        <Reference Include="nunit.framework">
          <HintPath>..\..\packages\test\NUnit\lib\netstandard2.0\nunit.framework.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When> 
  </Choose> -->
  <Import Project="..\..\.paket\Paket.Restore.targets" />
</Project>